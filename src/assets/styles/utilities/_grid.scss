@use "sass:math";
@use "../abstracts/mixins/media-queries" as *;

// Base layout classes
$grid-columns: 12;

.grid-system-container {
  width: 100%;
  max-width: 1200px;
  margin-right: auto;
  margin-left: auto;
}

.grid-system-row {
  display: flex;
  flex-flow: row wrap;
}

// col classes (distribute content on a row)

@include xs {
  /* Generates a class for each colum defined on grid*/
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include sm {
  /* Generates a class for each colum defined on grid*/
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md {
  /* Generates a class for each colum defined on grid*/
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg {
  /* Generates a class for each colum defined on grid*/
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xl {
  /* Generates a class for each colum defined on grid*/
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xxl {
  /* Generates a class for each colum defined on grid*/
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xxl {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

// Grid gaps

$grid-gaps: (
  "0": 0,
  "1": 4px,
  "2": 8px,
  "3": 12px,
  "4": 16px,
  "5": 20px,
  "6": 24px,
);

@each $key, $val in $grid-gaps {
  .gap-#{$key} {
    gap: $val;
  }
}

// Layout properties
$layout-properties: flex-start, flex-end, center, space-between, space-around;

@each $val in $layout-properties {
  .justify-#{$val} {
    justify-content: $val;
  }
}